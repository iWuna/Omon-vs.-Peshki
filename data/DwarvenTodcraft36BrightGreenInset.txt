Define CharMapFrom ( ' ' );
Define CharMapTo ( ' ' );
SetCharMap CharMapFrom CharMapTo;

Define CharList0
 ( '¨', '£', 'À', 'Á', 'Â', 'Ã', 'Ä', 'Å', 'Æ', 'Ç', 'È', 'É', 'Ê', 'Ë', 'Ì', 'Í'
   'Î', 'Ï', 'Ð', ' ', '!', 'Ñ', '\"', 'Ò', '#', 'Ó', '$', 'Ô', '%', 'Õ', '&', 'Ö'
   '\'', '×', '(', 'Ø', ')', 'Ù', '*', 'Ú', '+', 'Û', ',', 'Ü', '-', 'Ý', '.', 'Þ'
   '/', 'ß', '0', 'à', '1', 'á', '2', 'â', '3', 'ã', '4', 'ä', '5', 'å', '6', 'æ'
   '7', 'ç', '8', 'è', '9', 'é', ':', 'ê', ';', 'ë', '<', 'ì', '=', 'í', '>', 'î'
   '?', 'ï', '@', 'ð', 'A', 'ñ', 'B', 'ò', 'C', 'ó', 'D', 'ô', 'E', 'õ', 'F', 'ö'
   'G', '÷', 'H', 'ø', 'I', 'ù', 'J', 'ú', 'K', 'û', 'L', 'ü', 'M', 'ý', 'N', 'þ'
   'O', 'ÿ', 'P', 'Q', '¸', 'R', 'S', 'T', 'U', 'V', 'W', '¿', 'X', 'Y', 'Z', '['
   '\\', ']', '^', '¢', '_', '`', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j'
   'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'
   '{', '|', '}', '~', '¥', '´', '©', '«', '®', '°', '·', '»' );

Define WidthList0
 (  24,  24,  33,  27,  27,  25,  34,  25,  36,  22,  33,  33,  30,  32,  44,  33
    32,  34,  27,  21,  10,  29,  25,  29,  21,  33,  18,  34,  25,  38,  19,  33
     7,  33,  10,  44,  11,  44,  15,  29,  19,  39,  12,  25,  17,  29,  12,  46
    17,  29,  23,  24,  15,  20,  24,  20,  22,  18,  26,  28,  23,  19,  24,  28
    25,  17,  23,  25,  23,  25,  12,  22,  12,  24,  16,  32,  22,  25,  16,  24
    19,  25,  34,  20,  33,  21,  27,  22,  29,  26,  27,  26,  25,  28,  25,  25
    29,  25,  33,  34,  17,  35,  17,  22,  30,  30,  25,  19,  44,  21,  34,  34
    32,  22,  27,  33,  24,  29,  22,  29,  33,  33,  48,  24,  38,  33,  29,  11
    17,  12,  13,  24,  16,   7,  24,  20,  21,  20,  19,  18,  23,  25,  13,  13
    22,  18,  32,  25,  24,  20,  29,  22,  17,  22,  24,  24,  36,  28,  27,  21
    14,   7,  14,  22,  24,  24,  25,  24,  25,  24,  24,  24 );

Define RectList0
 ( ( 174,  609, 87, 87), ( 261,  609, 87, 87), ( 348,  609, 87, 87)
   ( 435,  609, 87, 87), ( 522,  609, 87, 87), ( 609,  609, 87, 87)
   ( 696,  609, 87, 87), ( 783,  609, 87, 87), ( 870,  609, 87, 87)
   ( 957,  609, 87, 87), (1044,  609, 87, 87), (1131,  609, 87, 87)
   (   0,  696, 87, 87), (  87,  696, 87, 87), ( 174,  696, 87, 87)
   ( 261,  696, 87, 87), ( 348,  696, 87, 87), ( 435,  696, 87, 87)
   ( 522,  696, 87, 87), (   0,    0,  0,  0), (   0,    0, 87, 87)
   ( 609,  696, 87, 87), (  87,    0, 87, 87), ( 696,  696, 87, 87)
   ( 174,    0, 87, 87), ( 783,  696, 87, 87), ( 261,    0, 87, 87)
   ( 870,  696, 87, 87), ( 348,    0, 87, 87), ( 957,  696, 87, 87)
   ( 435,    0, 87, 87), (1044,  696, 87, 87), ( 522,    0, 87, 87)
   (1131,  696, 87, 87), ( 609,    0, 87, 87), (   0,  783, 87, 87)
   ( 696,    0, 87, 87), (  87,  783, 87, 87), ( 783,    0, 87, 87)
   ( 174,  783, 87, 87), ( 870,    0, 87, 87), ( 261,  783, 87, 87)
   ( 957,    0, 87, 87), ( 348,  783, 87, 87), (1044,    0, 87, 87)
   ( 435,  783, 87, 87), (1131,    0, 87, 87), ( 522,  783, 87, 87)
   (   0,   87, 87, 87), ( 609,  783, 87, 87), (  87,   87, 87, 87)
   ( 696,  783, 87, 87), ( 174,   87, 87, 87), ( 783,  783, 87, 87)
   ( 261,   87, 87, 87), ( 870,  783, 87, 87), ( 348,   87, 87, 87)
   ( 957,  783, 87, 87), ( 435,   87, 87, 87), (1044,  783, 87, 87)
   ( 522,   87, 87, 87), (1131,  783, 87, 87), ( 609,   87, 87, 87)
   (   0,  870, 87, 87), ( 696,   87, 87, 87), (  87,  870, 87, 87)
   ( 783,   87, 87, 87), ( 174,  870, 87, 87), ( 870,   87, 87, 87)
   ( 261,  870, 87, 87), ( 957,   87, 87, 87), ( 348,  870, 87, 87)
   (1044,   87, 87, 87), ( 435,  870, 87, 87), (1131,   87, 87, 87)
   ( 522,  870, 87, 87), (   0,  174, 87, 87), ( 609,  870, 87, 87)
   (  87,  174, 87, 87), ( 696,  870, 87, 87), ( 174,  174, 87, 87)
   ( 783,  870, 87, 87), ( 261,  174, 87, 87), ( 870,  870, 87, 87)
   ( 348,  174, 87, 87), ( 957,  870, 87, 87), ( 435,  174, 87, 87)
   (1044,  870, 87, 87), ( 522,  174, 87, 87), (1131,  870, 87, 87)
   ( 609,  174, 87, 87), (   0,  957, 87, 87), ( 696,  174, 87, 87)
   (  87,  957, 87, 87), ( 783,  174, 87, 87), ( 174,  957, 87, 87)
   ( 870,  174, 87, 87), ( 261,  957, 87, 87), ( 957,  174, 87, 87)
   ( 348,  957, 87, 87), (1044,  174, 87, 87), ( 435,  957, 87, 87)
   (1131,  174, 87, 87), ( 522,  957, 87, 87), (   0,  261, 87, 87)
   ( 609,  957, 87, 87), (  87,  261, 87, 87), ( 696,  957, 87, 87)
   ( 174,  261, 87, 87), ( 783,  957, 87, 87), ( 261,  261, 87, 87)
   ( 870,  957, 87, 87), ( 348,  261, 87, 87), ( 957,  957, 87, 87)
   ( 435,  261, 87, 87), ( 522,  261, 87, 87), (1044,  957, 87, 87)
   ( 609,  261, 87, 87), ( 696,  261, 87, 87), ( 783,  261, 87, 87)
   ( 870,  261, 87, 87), ( 957,  261, 87, 87), (1044,  261, 87, 87)
   (1131,  957, 87, 87), (1131,  261, 87, 87), (   0,  348, 87, 87)
   (  87,  348, 87, 87), ( 174,  348, 87, 87), ( 261,  348, 87, 87)
   ( 348,  348, 87, 87), ( 435,  348, 87, 87), (   0, 1044, 87, 87)
   ( 522,  348, 87, 87), ( 609,  348, 87, 87), ( 696,  348, 87, 87)
   ( 783,  348, 87, 87), ( 870,  348, 87, 87), ( 957,  348, 87, 87)
   (1044,  348, 87, 87), (1131,  348, 87, 87), (   0,  435, 87, 87)
   (  87,  435, 87, 87), ( 174,  435, 87, 87), ( 261,  435, 87, 87)
   ( 348,  435, 87, 87), ( 435,  435, 87, 87), ( 522,  435, 87, 87)
   ( 609,  435, 87, 87), ( 696,  435, 87, 87), ( 783,  435, 87, 87)
   ( 870,  435, 87, 87), ( 957,  435, 87, 87), (1044,  435, 87, 87)
   (1131,  435, 87, 87), (   0,  522, 87, 87), (  87,  522, 87, 87)
   ( 174,  522, 87, 87), ( 261,  522, 87, 87), ( 348,  522, 87, 87)
   ( 435,  522, 87, 87), ( 522,  522, 87, 87), ( 609,  522, 87, 87)
   ( 696,  522, 87, 87), ( 783,  522, 87, 87), (  87, 1044, 87, 87)
   ( 174, 1044, 87, 87), ( 870,  522, 87, 87), ( 957,  522, 87, 87)
   (1044,  522, 87, 87), (1131,  522, 87, 87), (   0,  609, 87, 87)
   (  87,  609, 87, 87) );

Define OffsetList0
 ( (-31, -14), (-31, -14), (-27, -14), (-30, -14), (-30, -14), (-31, -14), (-26, -14), (-31, -14)
   (-25, -14), (-32, -14), (-27, -14), (-27, -14), (-28, -14), (-27, -14), (-21, -14), (-27, -14)
   (-27, -14), (-26, -14), (-30, -14), (0, 0), (-38, -14), (-29, -14), (-31, -14), (-29, -14)
   (-33, -14), (-27, -14), (-34, -14), (-26, -14), (-31, -14), (-24, -14), (-34, -14), (-27, -14)
   (-40, -14), (-27, -14), (-38, -14), (-21, -14), (-38, -14), (-21, -14), (-36, -14), (-29, -14)
   (-34, -14), (-24, -14), (-37, -14), (-31, -14), (-35, -14), (-29, -14), (-37, -14), (-20, -14)
   (-35, -14), (-29, -14), (-32, -14), (-31, -14), (-36, -14), (-33, -14), (-31, -14), (-33, -14)
   (-32, -14), (-34, -14), (-30, -14), (-29, -14), (-32, -14), (-34, -14), (-31, -14), (-29, -14)
   (-31, -14), (-35, -14), (-32, -14), (-31, -14), (-32, -14), (-31, -14), (-37, -14), (-32, -14)
   (-37, -14), (-31, -14), (-35, -14), (-27, -14), (-32, -14), (-31, -14), (-35, -14), (-31, -14)
   (-34, -14), (-31, -14), (-26, -14), (-33, -14), (-27, -14), (-33, -14), (-30, -14), (-32, -14)
   (-29, -14), (-30, -14), (-30, -14), (-30, -14), (-31, -14), (-29, -14), (-31, -14), (-31, -14)
   (-29, -14), (-31, -14), (-27, -14), (-26, -14), (-35, -14), (-26, -14), (-35, -14), (-32, -14)
   (-28, -14), (-28, -14), (-31, -14), (-34, -14), (-21, -14), (-33, -14), (-26, -14), (-26, -14)
   (-27, -14), (-32, -14), (-30, -14), (-27, -14), (-31, -14), (-29, -14), (-32, -14), (-29, -14)
   (-27, -14), (-27, -14), (-19, -14), (-31, -14), (-24, -14), (-27, -14), (-29, -14), (-38, -14)
   (-35, -14), (-37, -14), (-37, -14), (-31, -14), (-35, -14), (-40, -14), (-31, -14), (-33, -14)
   (-33, -14), (-33, -14), (-34, -14), (-34, -14), (-32, -14), (-31, -14), (-37, -14), (-37, -14)
   (-32, -14), (-34, -14), (-27, -14), (-31, -14), (-31, -14), (-33, -14), (-29, -14), (-32, -14)
   (-35, -14), (-32, -14), (-31, -14), (-31, -14), (-25, -14), (-29, -14), (-30, -14), (-33, -14)
   (-36, -14), (-40, -14), (-36, -14), (-32, -14), (-31, -14), (-31, -14), (-31, -14), (-31, -14)
   (-31, -14), (-31, -14), (-31, -14), (-31, -14) );

Define ExInfoKeys0
 ( "sfb.bold", "sfb.boxsize", "sfb.face", "sfb.italics", "sfb.linespacing"
   "sfb.quality", "sfb.script", "sfb.size", "sfb.text", "sfb.underline" );

Define ExInfoValues0
 ( "0", "0", "Dwarven Todcraft", "0", "0"
   "62128128", "204", "36", "!\"#$%&\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~©«®°·»¨£ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ¸¿¢¥´", "0" );

CreateLayer               Main;
LayerSetImage             Main 'DwarvenTodcraft36BrightGreenInset_layer0';
LayerSetBaseOrder         Main 0;
LayerSetAscent            Main 52;
LayerSetHeight            Main 58;
LayerSetCharWidths        Main CharList0 WidthList0;
LayerSetImageMap          Main CharList0 RectList0;
LayerSetCharOffsets       Main CharList0 OffsetList0;
LayerSetPointSize         Main 36;
LayerSetExInfo            Main ExInfoKeys0 ExInfoValues0;
LayerSetAlphaCorrection   Main 1;

SetDefaultPointSize       36;
